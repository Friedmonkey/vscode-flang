{
  "Flang HTML template": {
    "prefix": "flangHtml",
    "body": [
      "#use clientFlang",
      "#use macros",
      "",
      "#define Text(\\$text) <h2>\\$text</h2>",
      "",
      "<!DOCTYPE html>",
      "<html>",
      "<head>",
      "\t<meta charset=\"UTF-8\">",
      "\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "\t<title><(=PAGE)></title>",
      "\t<\\$clientEventHandeler\\$>",
      "\t<script>",
      "\t\tvar input;",
      "\t\t@setBind(input);",
      "\t</script>",
      "</head>",
      "<body>",
      "\t<input @bind(input)/>",
      "\t<button onclick=\"<(@writeFile)>(input)\">Write to file</button>",
      "\t<br/>",
      "\t<!-- <p>text is:</p>  -->",
      "\t@Text(text is:)",
      "\t<br/>",
      "",
      "\t<p id=\"text\"><(=readFile())></p>",
      "\t<button onclick=\"readFile()\">update</button>",
      "\t<script>",
      "\t\tasync function readFile()",
      "\t\t{",
      "\t\t\tvar field = @get(\"text\");",
      "\t\t\tvar content = await <(@readFile)>();",
      "\t\t\tfield.@set(content);",
      "\t\t}",
      "\t</script>",
      "</body>",
      "</html>",
      "",
      "<(clientFlang",
      "\tvoid clientFlang writeFile(string text)",
      "\t{",
      "\t\tFile.write(\"log.txt\", text);",
      "\t}",
      "\tstring clientFlang readFile()",
      "\t{",
      "\t\treturn File.read(\"log.txt\");",
      "\t}",
      ")>"
    ],
    "description": "HTML5 starting point"
  },
  "HTML template": {
    "prefix": "html",
    "body": [
      "<!DOCTYPE html>",
      "<html lang=\"en\">",
      "<head>",
      "\t<meta charset=\"UTF-8\">",
      "\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
      "\t<title>Document</title>",
      "</head>",
      "<body>",
      "\t$0",
      "</body>",
      "</html>"
    ],
    "description": "Simple HTML5 starting point"
  },
  "Flang clientFlang": {
    "prefix": "<(client",
    "body": [
      "<(clientFlang",
      "\t$0",
      ")>"
    ],
    "description": "clientFlang: \n Code snippet for clientFlang bracket"
  },
  "Flang flang": {
    "prefix": "<(flan",
    "body": [
      "<(flang",
      "\t$0",
      ")>"
    ],
    "description": "flang: \n Code snippet for flang bracket"
  },
  "Flang for": {
    "prefix": "for",
    "body": [
      "for (int ${1:i} = ${2:0}; ${1:i} < ${3:count}; ${1:i}++)",
      "{",
      "\t$0",
      "}"
    ],
    "description": "for: \n Code snippet for a flang for loop"
  },
  "Flang class": {
    "prefix": "fclass",
    "body": [
      "class ${1:i}",
      "{",
      "\t${1:i}()",
      "\t{",
      "\t\t$0",
      "\t}",
      "}"
    ],
    "description": "for: \n Code snippet for a flang for loop"
  },
  "Flang foreach": {
    "prefix": "foreach",
    "body": [
      "foreach (var ${1:item} in ${2:items})",
      "{",
      "\t$0",
      "}"
    ],
    "description": "foreach: \n Code snippet for a flang foreach loop"
  },
  "Flang print": {
    "prefix": "print",
    "body": [
      "print($0)"
    ],
    "description": "print: \n Code snippet for printing value to html"
  },
  "Flang use macros": {
    "prefix": "#use",
    "body": [
      "#use macros$0"
    ],
    "description": "use: \n Code snippet for enabling macros"
  },
  "Flang use clientFlang": {
    "prefix": "#use",
    "body": [
      "#use clientFlang$0"
    ],
    "description": "use: \n Code snippet for enabling client code"
  },
  "Flang use printedHtml": {
    "prefix": "#use",
    "body": [
      "#use printedHtml$0"
    ],
    "description": "use: \n Code snippet for enabling printed html code, meaning all html code is printed and can be used in loops !WARNING! THIS CAN CHANGE THE ENTIRE LOGIC OF YOUR CODE"
  },
  "Flang define": {
    "prefix": "#define",
    "body": [
      "#define $0($1) $2"
    ],
    "description": "define: \n Code snippet for define macro pre processor"
  },
  "Flang PAGE": {
    "prefix": "PAGE",
    "body": [
      "PAGE$0"
    ],
    "description": "PAGE: \n The currect page that you are visiting"
  },
  "Flang URL": {
    "prefix": "URL",
    "body": [
      "URL$0"
    ],
    "description": "URL: \n The currect url that you are visiting"
  },
  "Flang GET": {
    "prefix": "GET",
    "body": [
      "GET[$0]"
    ],
    "description": "GET: \n The GET from the request"
  },
  "Flang POST": {
    "prefix": "POST",
    "body": [
      "POST[$0]"
    ],
    "description": "POST: \n The POST from the request"
  }

}